cxx_library(
    name = "config",
    visibility = [ "PUBLIC" ],
    header_namespace = "",
    exported_headers = [
        "OpenEXRConfig.h",
        "IlmThreadConfig.h",
        "OpenEXRConfigInternal.h",
    ],
    link_style = "static",
    exported_header_style = "system",
)

cxx_library(
    name = "OpenEXRCore",
    visibility = [ "PUBLIC" ],
    header_namespace = "",
    exported_headers = dict(map(
        lambda x: [x, "src/src/lib/OpenEXRCore" + x],
        [
            "openexr.h",
            "openexr_attr.h",
            "openexr_base.h",
            "openexr_chunkio.h",
            "openexr_coding.h",
            "openexr_compression.h",
            "openexr_config.h",
            "openexr_context.h",
            "openexr_debug.h",
            "openexr_decode.h",
            "openexr_encode.h",
            "openexr_errors.h",
            "openexr_part.h",
            "openexr_std_attr.h",
        ],
    )),
    headers = glob([
        "src/src/lib/OpenEXRCore/*.h",
    ]),
    srcs = glob([
        "src/src/lib/OpenEXRCore/*.c",
    ]),
    exported_deps = [
        ":config",
        "//lib/third_party/Imath:Imath",
    ],
    deps = [
        "//lib/third_party/libdeflate:libdeflate",
    ],
    link_style = "static",
    exported_header_style = "system",
)
